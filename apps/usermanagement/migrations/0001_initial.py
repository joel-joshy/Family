# Generated by Django 4.1.7 on 2023-03-14 11:49

import common.managers
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phone_field.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='family logos/', verbose_name='Logo')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Family',
                'verbose_name_plural': 'Families',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(blank=True, default=uuid.uuid4, max_length=100, unique=True, verbose_name='Username')),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('mobile', phone_field.models.PhoneField(blank=True, help_text='Mobile Number', max_length=31, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('user_type', models.CharField(choices=[('admin', 'Admin'), ('manager', 'Manager'), ('member', 'Member')], default='manager', max_length=15, verbose_name='User Type')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures', verbose_name='Profile Picture')),
                ('location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Location')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('family', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='get_user', to='usermanagement.family', verbose_name='Family')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('site', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='sites.site', verbose_name='Site')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User Details',
                'verbose_name_plural': 'User Details',
                'ordering': ('-created',),
                'unique_together': {('username', 'site')},
            },
            managers=[
                ('objects', common.managers.CustomUserManager()),
            ],
        ),
    ]
